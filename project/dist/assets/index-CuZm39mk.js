(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))r(t);new MutationObserver(t=>{for(const e of t)if(e.type==="childList")for(const l of e.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&r(l)}).observe(document,{childList:!0,subtree:!0});function s(t){const e={};return t.integrity&&(e.integrity=t.integrity),t.referrerPolicy&&(e.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?e.credentials="include":t.crossOrigin==="anonymous"?e.credentials="omit":e.credentials="same-origin",e}function r(t){if(t.ep)return;t.ep=!0;const e=s(t);fetch(t.href,e)}})();function x({rimHex:i=35071,facingHex:o=0}={}){const s={color1:{value:new THREE.Color(i)},color2:{value:new THREE.Color(o)},fresnelBias:{value:.2},fresnelScale:{value:1.5},fresnelPower:{value:4}},r=`
    uniform float fresnelBias;
    uniform float fresnelScale;
    uniform float fresnelPower;
    
    varying float vReflectionFactor;
    
    void main() {
      vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );
      vec4 worldPosition = modelMatrix * vec4( position, 1.0 );
    
      vec3 worldNormal = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );
    
      vec3 I = worldPosition.xyz - cameraPosition;
    
      vReflectionFactor = fresnelBias + fresnelScale * pow( 1.0 + dot( normalize( I ), worldNormal ), fresnelPower );
    
      gl_Position = projectionMatrix * mvPosition;
    }
    `,t=`
    uniform vec3 color1;
    uniform vec3 color2;
    
    varying float vReflectionFactor;
    
    void main() {
      float f = clamp( vReflectionFactor, 0.0, 1.0 );
      gl_FragColor = vec4(mix(color2, color1, vec3(f)), f);
    }
    `;return new THREE.ShaderMaterial({uniforms:s,vertexShader:r,fragmentShader:t,transparent:!0,blending:THREE.AdditiveBlending})}const g=new THREE.TextureLoader;function L(i){const o=new THREE.Group;o.rotation.z=-20.4*Math.PI/180;const s=g.load("images/planets/earth.jpg"),r=new THREE.IcosahedronGeometry(1,15),t=new THREE.MeshStandardMaterial({map:s}),e=new THREE.Mesh(r,t);o.add(e),o.position.set(...i);const l=g.load("images/planets/earth_light.jpg"),w=new THREE.MeshBasicMaterial({map:l,blending:THREE.AdditiveBlending}),a=new THREE.Mesh(r,w);o.add(a);const R=g.load("images/planets/earth_clouds.jpg"),m=new THREE.MeshStandardMaterial({map:R,transparent:!0,opacity:.4,blending:THREE.AdditiveBlending}),M=new THREE.Mesh(r,m);M.scale.setScalar(1.003),o.add(M);const b=x(),H=new THREE.Mesh(r,b);return H.scale.setScalar(1.01),o.add(H),{earthGroup:o,earthMesh:e,lightsMesh:a,cloudsMesh:M,glowMesh:H}}function z({img:i="",size:o=1,position:s=[],glow:r}){const t=new THREE.IcosahedronGeometry(1,12),e=new THREE.Group;e.position.set(...s);const l=g.load(`images/planets/${i}`),w=new THREE.MeshStandardMaterial({map:l}),a=new THREE.Mesh(t,w);a.scale.setScalar(o),i=="saturn.jpg"?e.rotation.z=-6*Math.PI/180:e.rotation.z=-20.4*Math.PI/180;const R=x({rimHex:r,facingHex:0}),m=new THREE.Mesh(t,R);return m.scale.setScalar(1.01),a.add(m),e.add(a),e}function G({img:i="",position:o=[]}){const s=g.load(`images/planets/${i}`),r=9,t=12,e=128,l=new THREE.RingGeometry(r,t,e),w=new THREE.MeshBasicMaterial({map:s,color:16777215,side:THREE.DoubleSide}),a=new THREE.Mesh(l,w);return a.rotation.x=Math.PI/2,a.rotation.y=-Math.PI/40,a.rotation.z=0,a.position.set(...o),a}function j(){const i=new THREE.BufferGeometry,o=new THREE.TextureLoader().load("images/stars/diamond.png"),s=new THREE.PointsMaterial({size:.8,map:o,transparent:!0,depthWrite:!1,blending:THREE.AdditiveBlending}),r=[];for(let e=0;e<2e4;e++)r.push((Math.random()-.5)*1e3,(Math.random()-.5)*1e3,(Math.random()-.5)*1e3);return i.setAttribute("position",new THREE.Float32BufferAttribute(r,3)),new THREE.Points(i,s)}const B=window.innerWidth,F=window.innerHeight,C=75,I=B/F,U=.1,W=1e3,p=new THREE.Scene,y=new THREE.Scene,n=new THREE.PerspectiveCamera(C,I,U,W),A=document.getElementById("webgl-canvas"),h=new THREE.WebGLRenderer({canvas:A,alpha:!0});h.setSize(window.innerWidth,window.innerHeight);h.setPixelRatio(window.devicePixelRatio);h.setClearColor(0,0);h.clear();const v=new THREE.WebGLRenderer({canvas:backgroundCanvas});v.setSize(window.innerWidth,window.innerHeight);const N=10/2,c=.01;n.position.z=5;const T=j();y.add(T);const d=z({size:1.4,img:"mars.jpg",position:[-1,0,26.5],glow:13204573});p.add(d);const u=z({size:10,img:"jupiter.jpg",position:[0,0,34],glow:16747520});p.add(u);const E=z({size:4,img:"saturn.jpg",position:[-.5,-1,90],glow:13742716});p.add(E);const f=G({img:"saturnRings.jpg",position:[-.5,-.4,90]});p.add(f);const{earthGroup:O,earthMesh:D,lightsMesh:_,cloudsMesh:q,glowMesh:V}=L([1,0,3.5]);p.add(O);const S=new THREE.DirectionalLight(16777215,1);S.position.set(-2,.5,1.5);p.add(S);function Y(){const i=window.scrollY,o=document.body.scrollHeight-window.innerHeight,s=i/o;n.position.z=5+s*100}function $(){if(n.position.z>=20&&n.position.z<=33){const i=Math.sin(n.position.z*.1)*.2;d.position.z=THREE.MathUtils.lerp(d.position.z,n.position.z-2.8,c),d.position.x=THREE.MathUtils.lerp(d.position.x,-1-i,c)}else d.position.z=THREE.MathUtils.lerp(d.position.z,26.5,c);n.position.z>=40&&n.position.z<=60?u.position.z=THREE.MathUtils.lerp(u.position.z,n.position.z-N-18,c):u.position.z=THREE.MathUtils.lerp(u.position.z,30,c),n.position.z>=75&&n.position.z<=100?(E.position.z=THREE.MathUtils.lerp(E.position.z,n.position.z-16,c),f.position.z=THREE.MathUtils.lerp(f.position.z,n.position.z-16,c)):(E.position.z=THREE.MathUtils.lerp(E.position.z,90,c),f.position.z=THREE.MathUtils.lerp(f.position.z,90,c))}window.addEventListener("scroll",Y);function P(){requestAnimationFrame(P),T.rotation.x+=3e-5,T.rotation.y+=3e-5,D.rotation.y+=2e-4,_.rotation.y+=2e-4,V.rotation.y+=2e-4,q.rotation.y+=23e-5,u.rotation.y+=2e-4,E.rotation.y+=2e-4,f.rotation.z-=5e-5,d.rotation.y+=2e-4,$(),v.render(y,n),h.render(p,n)}P();window.addEventListener("resize",()=>{v.setSize(window.innerWidth,window.innerHeight),h.setSize(window.innerWidth,window.innerHeight),n.aspect=window.innerWidth/window.innerHeight,n.updateProjectionMatrix()});
